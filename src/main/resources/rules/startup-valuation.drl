/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/


import cz.utb.fai.dto.StartupValuationRes
import cz.utb.fai.dto.type.Evidence
import cz.utb.fai.dto.type.Hypothesis
import cz.utb.fai.dto.type.Probability
import java.util.ArrayList
import java.util.List
import java.util.Arrays
import java.util.Collections
import cz.utb.fai.drools.TrackingAgendaEventListener
import cz.utb.fai.dto.type.Score
import cz.utb.fai.dto.type.Conclusion
import org.kie.api.runtime.rule.Agenda
import cz.utb.fai.dto.type.Probability

global StartupValuationRes response
global String YES


rule "Business Needs - No"
salience 100
when
    Evidence(description == "Do you know what your business needs?", value == "no")
then
    Hypothesis hypothesis = new Hypothesis("Your business needs further analysis");
    insertLogical(hypothesis);
    response.appendExplanation(hypothesis.getDescription());
end

rule "Product Readiness Level"
salience 100
when
    //exists Hypothesis(description == "Your business needs further analysis")
    Evidence(description == "What is your Product Readiness Level?", value == $value : value)
then
    double rate = TrackingAgendaEventListener.adjustFrameScore(Score.PRODUCT_SCORE, $value);
    Conclusion conclusion = new Conclusion("You current success probability is " + rate + " out of 100.", rate);

    response.setRate(conclusion.getRate());
    response.appendExplanation(conclusion.getDescription());
end

rule "Business Needs - Yes"
salience 99
when
    Evidence(description == "Do you know what your business needs?", value == "yes")
then
    insertLogical(new Hypothesis("Considering Frame Team."));
end

rule "Marketing skill"
salience 94
when
    exists Hypothesis(description == "Considering Frame Team.")
    Evidence(description == "Do you have the marketing skills?", value == $ms : value )
then
    double rate = $ms.equals(YES) ? Score.MARKETING_SKILLS : Score.NEGATIVE_SCENARIO;
    if (rate == Score.NEGATIVE_SCENARIO) {
        Hypothesis hypothesis = new Hypothesis("You should consider expanding your Marketing skills.");
        response.appendExplanation(hypothesis.getDescription());
    }
    response.appendRate(rate);
end

rule "Technical skill"
salience 93
when
    exists Hypothesis(description == "Considering Frame Team.")
    Evidence(description == "Do you have the technical skills?", value == $ts : value )
then
    double rate = $ts.equals(YES) ? Score.TECHNICAL_SKILLS : Score.NEGATIVE_SCENARIO;
    if (rate == Score.NEGATIVE_SCENARIO) {
        Hypothesis hypothesis = new Hypothesis("You should consider expanding your Technical skills.");
        response.appendExplanation(hypothesis.getDescription());
    }
    response.appendRate(rate);
end

rule "Analytical skill"
salience 92
when
    exists Hypothesis(description == "Considering Frame Team.")
    Evidence(description == "Do you have the analytical skills?", value == $as : value )
then
    double rate = $as.equals(YES) ? Score.ANALYTICAL_SKILLS : Score.NEGATIVE_SCENARIO;
    if (rate == Score.NEGATIVE_SCENARIO) {
        Hypothesis hypothesis = new Hypothesis("You should consider expanding your Analytical skills.");
        response.appendExplanation(hypothesis.getDescription());
    }
    response.appendRate(rate);
end

rule "Experience"
salience 91
when
    exists Hypothesis(description == "Considering Frame Team.")
    Evidence(description == "Do you have previous experience as a team?", value == $experience : value )
then
    double rate = $experience.equals(YES) ? Score.TEAM_SKILLS : Score.NEGATIVE_SCENARIO;
    if (rate == Score.NEGATIVE_SCENARIO) {
        Hypothesis hypothesis = new Hypothesis("You should consider experience in the field a bit more.");
        response.appendExplanation(hypothesis.getDescription());
    }
    response.appendRate(rate);
end

rule "Goal"
salience 90
when
    exists Hypothesis(description == "Considering Frame Team.")
    Evidence(description == "Are your personal goals aligned with the start-up vision?", value == $goal : value )
then
    double rate = $goal.equals(YES) ? Score.TEAM_SKILLS : Score.NEGATIVE_SCENARIO;
    if (rate == Score.NEGATIVE_SCENARIO) {
        Hypothesis hypothesis = new Hypothesis("You should revise if your goals are aligned with company visions.");
        response.appendExplanation(hypothesis.getDescription());
    }
    response.appendRate(rate);
end

rule "Expertise"
salience 89
when
    exists Hypothesis(description == "Considering Frame Team.")
    Evidence(description == "Do your team or advisors have industry expertise?", value == $expertise : value )
then
    double rate = $expertise.equals(YES) ? Score.TEAM_SKILLS : Score.NEGATIVE_SCENARIO;
    if (rate == Score.NEGATIVE_SCENARIO) {
        Hypothesis hypothesis = new Hypothesis("You should consider expertise in the field a bit more.");
        response.appendExplanation(hypothesis.getDescription());
    }
    response.appendRate(rate);
end
//TODO conclusion/hypothesis from FRAME TEAM?


rule "Product - Product Readiness Level"
salience 80
when
    Evidence(description == "What is your Product Readiness Level?", value == $value : value)
    exists Hypothesis(description == "Considering Frame Team.")
then
    double rate = TrackingAgendaEventListener.adjustFrameScore(Score.PRODUCT_SCORE, $value);
    Hypothesis hypothesis = new Hypothesis("Your actual Product Readiness Level is " + $value + "out of 9.");

    response.appendRate(rate);
    response.appendExplanation(hypothesis.getDescription());
end

rule "No competitors"
salience 77
when
    Evidence(description == "Do you have competitors?", value == "no")
then
    insertLogical(new Hypothesis("Considering Frame Traction."));
end

rule "Some competitors"
salience 75
when
    Evidence(description == "Do you have competitors?", value == "yes")
then
    insertLogical(new Hypothesis("You need to protect your product/service!"));
end

rule "Intellectual Property (IP)"
salience 75
when
    exists Hypothesis(description == "You need to protect your product/service!")
    Evidence(description == "Can you protect your product/service?", value == $value : value)
then
    if($value.equals(YES)) {
        response.appendRate(Score.IP_SCORE);
        response.appendExplanation(new Hypothesis("You seem to have thoughts about intellectual property protection.").getDescription());
    } else {
        response.appendExplanation(new Hypothesis("You should consider intellectual property protection for your product/service.").getDescription());
    }
    insertLogical(new Hypothesis("Considering Frame Traction."));
end

rule "Traction"
salience 70
when
    exists Hypothesis( description == "Considering Frame Traction.")
    Evidence(description == "What's the lifetime value of your potential customer?", value == $ltv : value)
    Evidence(description == "What's the potentional customer acquisition cost?", value == $cac : value)

    Evidence(description == "From 1 to 10, how good is your engagement rate?", value == $interested : value)
then
    double ltvToCac = TrackingAgendaEventListener.parseLtvAndCac(Double.parseDouble($ltv), Double.parseDouble($cac));
    insert(new Probability(ltvToCac * 0.1, "P(Traction|LTV:CAC)"));
    insert(new Probability(Double.parseDouble($interested) * 0.1, "P(Traction|Interested)"));
end

rule "P(Traction|LTV:CAC) and P(Traction|Interested)"
@LS1(9.0)
@LN1(0.67)
@LS2(1.5)
@LN2(0.11)
salience 60
when
    exists Hypothesis( description == "Considering Frame Traction.")
    exists Probability( description == "P(Traction|LTV:CAC)")
    exists Probability( description == "P(Traction|Interested)")
then
    TrackingAgendaEventListener.getProbabilityRef(Probability.class, "P(Traction|LTV:CAC)").updateProbability();
    TrackingAgendaEventListener.getProbabilityRef(Probability.class, "P(Traction|Interested)").updateProbability();
end

rule "P(Traction|LTV:CAC|Interested)"
salience 55
when
    exists Hypothesis( description == "Considering Frame Traction.")
    $LTVtoCAC : Probability( description == "P(Traction|LTV:CAC)")
    $interested : Probability( description == "P(Traction|Interested)")
then
    double probability = $LTVtoCAC.getProbability() * $interested.getProbability();
    response.appendRate(probability * Score.TRACTION_SCORE);
end

rule "Strategic Investor"
salience 35
when
    Evidence(description == "Do you have a strategic investor?", value == $investor : value)
then
    double rate = $investor.equals(YES) ? Score.INVESTOR_SCORE : Score.NEGATIVE_SCENARIO;
    if (rate == Score.NEGATIVE_SCENARIO) {
        Hypothesis hypothesis = new Hypothesis("You should consider looking for strategic investor.");
        response.appendExplanation(hypothesis.getDescription());
    }
    response.appendRate(rate);
end

rule "Opportunity"
salience 30
when
    Evidence(description == "What’s your SAM within 5 years?", value == $sam : value)
    Evidence(description == "What’s your TAM within 5 years?", value == $tam : value)
    Evidence(description == "How much money do you need to enter a market?", value == $money : value)
then
    double samToMvp = TrackingAgendaEventListener.parseSamToMoney(Double.parseDouble($sam), Double.parseDouble($money));
    double tamToSam = TrackingAgendaEventListener.parseTamToSam(Double.parseDouble($tam), Double.parseDouble($sam));

    insert(new Probability(samToMvp * 0.1, "P(Opportunity|SAM:MVP)"));
    insert(new Probability(tamToSam * 0.1, "P(Opportunity|TAM:SAM)"));
end

rule "P(Opportunity|SAM:MVP) and P(Opportunity|TAM:SAM)"
@LS1(9.0)
@LN1(1.0)
@LS2(0.67)
@LN2(0.11)
salience 25
when
    exists Probability( description == "P(Opportunity|SAM:MVP)")
    exists Probability( description == "P(Opportunity|TAM:SAM)")
then
    TrackingAgendaEventListener.getProbabilityRef(Probability.class, "P(Opportunity|SAM:MVP)").updateProbability();
    TrackingAgendaEventListener.getProbabilityRef(Probability.class, "P(Opportunity|TAM:SAM)").updateProbability();
end

rule "P(Opportunity|SAM:MVP|TAM:SAM)"
salience 20
when
    $samToMvp : Probability( description == "P(Opportunity|SAM:MVP)")
    $tamToSam : Probability( description == "P(Opportunity|TAM:SAM)")
then
    double probability = $samToMvp.getProbability() * $tamToSam.getProbability();
    response.appendRate(probability * Score.OPPORTUNITY_SCORE);
end